---
import { getCollection } from "astro:content";
import Entry from "@/components/blog/Entry.astro";
import Title from "@components/global/Title.astro";
import { getLangFromUrl, useTranslations, useTranslatedPath } from "@i18n/utils";

const lang = getLangFromUrl(Astro.url);
const t = useTranslations(lang);
const translatePath = useTranslatedPath(lang);

const allPosts = (await getCollection("posts"))
	.filter((post) => {
		const [postLang, ...slug] = post.slug.split("/");
		return postLang === lang;
	})
	.map((post) => {
		const [postLang, slug] = post.slug.split("/");

		return {
			...post,
			slug: slug,
		};
	})
	.sort((a, b) => Number(b.data.pubDate) - Number(a.data.pubDate));
---

<section>
	<div class="top-[-10rem]transform-gpu absolute inset-x-0 overflow-hidden blur-3xl sm:top-[-20rem]" aria-hidden="true">
		<div class="gradient-element"></div>
	</div>
	<div class="mx-auto flex flex-col gap-16 px-8 py-24 md:px-12 lg:pt-32 2xl:max-w-7xl">
		<!-- svg: first layer -->
		<svg class="hidden" viewBox="0 0 250 250" xmlns="http://www.w3.org/2000/svg">
			<filter id="article-noise-filter">
				<feTurbulence type="fractalNoise" baseFrequency="0.8" numOctaves="3" stitchTiles="stitch"></feTurbulence>
			</filter>
		</svg>
		<Title title={t("blog.title")} subtitle={t("blog.subtitle")} class="pb-10 pt-20 uppercase" />
		{
			allPosts && allPosts[0] && (
				<Entry
					url={"/blog/" + allPosts[0].slug}
					title={allPosts[0].data.title}
					description={allPosts[0].data.description}
					alt={allPosts[0].data.title}
					pubDate={allPosts[0].data.pubDate.toString().slice(0, 10)}
					author={allPosts[0].data.author}
					image={allPosts[0].data.image.source}
					titleInside={false}
				/>
			)
		}

		<div class="grid grid-cols-1 gap-12 md:grid-cols-2 lg:grid-cols-3">
			{
				allPosts
					.slice(1)
					.map((post) => (
						<Entry
							url={"/blog/" + post.slug}
							title={post.data.title}
							description={post.data.description}
							alt={post.data.title}
							pubDate={post.data.pubDate.toString().slice(0, 10)}
							author={post.data.author}
							image={post.data.image.source}
						/>
					))
			}
		</div>
	</div>
</section>

<style>
	.gradient-element {
		@apply relative left-1/2 -z-10 aspect-[1155/678] w-[36.125rem] max-w-none -translate-x-1/2 rotate-[30deg] bg-gradient-to-tr from-[#a2d4a0] to-[#aac887] opacity-30 sm:left-[calc(50%-40rem)] sm:w-[72.1875rem];
		clip-path: polygon(
			74.1% 44.1%,
			100% 61.6%,
			97.5% 26.9%,
			85.5% 0.1%,
			80.7% 2%,
			72.5% 32.5%,
			60.2% 62.4%,
			52.4% 68.1%,
			47.5% 58.3%,
			45.2% 34.5%,
			27.5% 76.7%,
			0.1% 64.9%,
			17.9% 100%,
			27.6% 76.8%,
			76.1% 97.7%,
			74.1% 44.1%
		);
	}
	.article-overlay {
		background-repeat: no-repeat;
		background-position: center;
		background-size: cover;
	}
</style>
