---
const randomId = Math.random().toString(36).substring(2, 15);
const filterUrlId = `url(#${randomId})`;

const { colorBg = "#6cf901", colorA = "#EDB74D", colorB = "#EB6666", colorC = "#6FB18A", class: className, ...rest } = Astro.props;
---

<div class:list={[className, "grainy-gradient"]} {...rest}>
	<svg class="hidden">
		<filter id={randomId}>
			<feTurbulence type="fractalNoise" baseFrequency="0.6" stitchTiles="stitch"></feTurbulence>
			<feColorMatrix in="colorNoise" type="matrix" values="1 0 0 0 0 0 1 0 0 0 0 0 1 0 0 0 0 0 1 0"></feColorMatrix>
			<feComposite operator="in" in2="SourceGraphic" result="monoNoise"></feComposite>
			<feBlend in="SourceGraphic" in2="monoNoise" mode="screen"></feBlend>
		</filter>
	</svg>
	<div class="blob-cont">
		<div class="color-a blob"></div>
		<div class="color-c blob"></div>
		<div class="color-b blob"></div>
	</div>
	<slot />
</div>

<style define:vars={{ filterUrlId, colorBg, colorA, colorB, colorC }}>
	.grainy-gradient {
		position: relative;
		border-radius: inherit;
		overflow: hidden;
	}
	.grainy-gradient::before,
	.grainy-gradient::after {
		position: absolute;
		left: 0;
		top: 0;
		content: "";
		width: 100%;
		height: 100%;
		z-index: -1;
		opacity: 40%;
		border-radius: inherit;
	}
	.grainy-gradient::before {
		background: var(--colorBg);
		filter: var(--filterUrlId);
	}

	/* Blobs */

	.blob-cont {
		display: flex;
		flex-direction: column;
		justify-content: center;
		align-items: center;
		z-index: -2;
		height: 100%;
		width: 100%;
		position: absolute;
	}

	.blob {
		border-radius: 100px;
		filter: blur(80px);
		opacity: 50%;
	}

	.color-a {
		background-color: var(--colorA);
		position: absolute;
		top: 200px;
		left: 100px;
		height: 200px;
		width: 200px;

		animation: color-a 8s infinite ease;
	}

	.color-b {
		background-color: var(--colorB);
		position: absolute;
		top: 80px;
		right: -20px;
		height: 200px;
		width: 250px;

		animation: color-b 8s infinite ease;
	}

	.color-c {
		background-color: var(--colorC);
		position: absolute;
		right: 0;
		top: 300px;
		height: 250px;
		width: 200px;

		animation: color-c 8s infinite linear;
	}

	@keyframes color-a {
		0% {
			top: 200px;
			left: 100px;
			transform: scale(1);
		}
		30% {
			top: 300px;
			left: 150px;
			transform: scale(1.2);
		}
		60% {
			top: 100px;
			left: 200px;
			transform: scale(1.3);
		}
		100% {
			top: 200px;
			left: 100px;
			transform: scale(1);
		}
	}

	@keyframes color-b {
		0% {
			top: 80px;
			right: -20px;
			transform: scale(1.2);
		}
		30% {
			top: 300px;
			right: -20px;
			transform: scale(1);
		}
		60% {
			top: 200px;
			right: 100px;
			transform: scale(1);
		}
		100% {
			top: 80px;
			right: -20px;
			transform: scale(1.2);
		}
	}

	@keyframes color-c {
		0% {
			top: 250px;
			right: 0px;
			transform: scale(1);
		}
		30% {
			top: 150px;
			right: 150px;
			transform: scale(1.4);
		}
		60% {
			top: 250px;
			right: 100px;
			transform: scale(1);
		}
		100% {
			top: 250px;
			right: 0px;
			transform: scale(1);
		}
	}
</style>
